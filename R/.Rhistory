if (working_from == "charite") {
base_dir = "C:/MyStuff/TSSC/"
}
# 3. Save this dataframe
fwrite(sample_layout, paste(base_dir, "Data/Boone_lab/sample_layout.csv", sep=""))
knitr::opts_chunk$set(echo = TRUE)
library(xlsx)
library(data.table)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggrepel)
library(stringr)
library(glue)
library(viridis)
library(platetools)
working_from = "charite"
if (working_from == "home") {
base_dir = "/home/alvaro/MyStuff/"
} else
if (working_from == "charite") {
base_dir = "C:/MyStuff/"
}
# Synthetases dataframe
synthetases <- as.data.frame(fread(paste(base_dir, "tRNA_KOs/Data/trna_synthetases.csv", sep="")))
# Agar growth data
growth_agar <- as.data.frame(fread(paste(base_dir, "TSSC/Data/Boone_lab/Growth/Mine/Processed_by_them/growth_agar.tsv", sep="")))
# Master tRNA dataset
master_dataset <- as.data.frame(fread(paste(base_dir, "tRNA_KOs/Data/Other/GtRNAdb/master_tRNA_dataset.csv", sep="")))
# Amino acid information dataset
amino_acids <- as.data.frame(fread(paste(base_dir, "tRNA_KOs/Data/Other/GtRNAdb/amino_acids.csv", sep="")))
# Layout of samples in the 384-well plates we got from the Boone lab
sample_layout <- as.data.frame(fread(paste(base_dir, "TSSC/Data/Boone_lab/sample_layout.csv", sep="")))
# Grab the tRNA-synthetases that are in the library
trna_synths_in_library <- synthetases[synthetases$Gene.secondaryIdentifier %in% growth_agar$Sys.Name,]
trna_synths_in_library <- trna_synths_in_library[order(trna_synths_in_library$Gene.name),]
# Check, out of the tRNA genes that couldn't be KOd in the tRNA KO library, how many correspond to which amino acids - what defines this? Explore in next chunk
sort(table(master_dataset$Isotype_from_anticodon[master_dataset$KOd == "No"]))
# For each 384-well plate I need to come up with a separate dataframe, with only the column with the appropriate well IDs, and another column I want to color the wells by
for (i in 1:4) {
temp <- sample_layout %>%
filter(Plate384 == i) %>%
mutate(values = as.numeric(Synthetase == "Yes" & Available == "Yes")) %>%
dplyr::select(values, Well_ID_non_unique)
raw_map(data = temp$values,
well = temp$Well_ID_non_unique,
plate = 384) +
ggtitle(glue("Plate {i} - tRNA synthetases TS alleles")) +
theme_dark() +
scale_fill_viridis() +
theme(axis.text=element_text(size=6))
ggsave(paste(base_dir, "TSSC/Output/Plots/sample_layout/synthetases_plate_", i, ".png", sep=""))
}
# For each 384-well plate I need to come up with a separate dataframe, with only the column with the appropriate well IDs, and another column I want to color the wells by
for (i in 1:4) {
temp <- sample_layout %>%
filter(Plate384 == i) %>%
mutate(values = as.numeric(Synthetase == "Yes" & Available == "Yes")) %>%
dplyr::select(values, Well_ID_non_unique)
raw_map(data = temp$values,
well = temp$Well_ID_non_unique,
plate = 384) +
ggtitle(glue("Plate {i} - tRNA synthetases TS alleles")) +
theme_dark() +
scale_fill_viridis() +
theme(axis.text=element_text(size=6))
ggsave(paste(base_dir, "TSSC/Output/Plots/sample_layout/synthetases_plate_", i, ".png", sep=""))
}
LETTERS["A"]
number("a")
numbers("a")
numbers["a"]
View(growth_agar)
growth_agar <- growth_agar %>%
mutate(possible_selection = case_when(Plate384 == 4 & (Row384 == which(letters == "f")|Row384 == which(letters == "g")) ~ TRUE,
TRUE ~ FALSE))
ggplot(data = growth_agar, aes(x = Avg_AUC_22, y = Avg_AUC_26, col = as.factor(possible_selection))) +
geom_point() +
geom_abline() +
labs(col = "Ratio 26ºC/22ºC") +
theme_light() +
xlab("AUC at 22ºC") +
ylab("AUC at 26ºC")
library(xlsx)
library(data.table)
library(dplyr)
library(tidyr)
# Load original data
flu <- read.xlsx(file = paste(base_dir, "Data/Fluorescence/het_diploid_intensities_forMC.xlsx", sep = ""), sheetIndex = 1)
working_from = "home"
if (working_from == "home") {
base_dir = "/home/alvaro/MyStuff/TSSc/"
} else
if (working_from == "charite") {
base_dir = "C:/MyStuff/TSSC/"
}
# Load original data
flu <- read.xlsx(file = paste(base_dir, "Data/Fluorescence/het_diploid_intensities_forMC.xlsx", sep = ""), sheetIndex = 1)
# Load original data
flu <- read.xlsx(file = paste(base_dir, "Data/Fluorescence/het_diploid_intensities_forMC.xlsx", sep = ""), sheetIndex = 1)
library(xlsx)
library(data.table)
library(dplyr)
library(tidyr)
# Set up environment
working_from = "charite"
if (working_from == "home") {
base_dir = "/home/alvaro/MyStuff/TSSc/"
} else
if (working_from == "charite") {
base_dir = "C:/MyStuff/TSSC/"
}
# Load original data
flu <- read.xlsx(file = paste(base_dir, "Data/Fluorescence/het_diploid_intensities_forMC.xlsx", sep = ""), sheetIndex = 1)
# Load original data
flu <- read.xlsx(file = paste(base_dir, "Data/Boone_lab/Fluorescence/het_diploid_intensities_forMC.xlsx", sep = ""), sheetIndex = 1)
# Load original data
flu <- read.xlsx(file = paste(base_dir, "Data/Boone_lab/Fluorescence/het_diploid_intensities_forMC.xlsx", sep = ""), sheetIndex = 2)
options(java.parameters = c("-XX:+UseConcMarkSweepGC", "-Xmx8192m"))
library(xlsx)
library(data.table)
library(dplyr)
library(tidyr)
# Set up environment
working_from = "charite"
if (working_from == "home") {
base_dir = "/home/alvaro/MyStuff/TSSc/"
} else
if (working_from == "charite") {
base_dir = "C:/MyStuff/TSSC/"
}
# Load original data
flu <- read.xlsx(file = paste(base_dir, "Data/Boone_lab/Fluorescence/het_diploid_intensities_forMC.xlsx", sep = ""), sheetIndex = 2)
# Load original data
fluo_1 <- as.data.frame(fread(paste(base_dir, "Data/Boone_lab/Fluorescence/raw_1.csv")))
# Load original data
fluo_1 <- as.data.frame(fread(paste(base_dir, "Data/Boone_lab/Fluorescence/raw_1.csv", sep = "")))
View(fluo_1)
rm(fluo_1)
rm(flu)
raw_1 <- as.data.frame(fread(paste(base_dir, "Data/Boone_lab/Fluorescence/raw_1.csv", sep = "")))
raw_2 <- as.data.frame(fread(paste(base_dir, "Data/Boone_lab/Fluorescence/raw_2.csv", sep = "")))
raw_3 <- as.data.frame(fread(paste(base_dir, "Data/Boone_lab/Fluorescence/raw_3.csv", sep = "")))
library(xlsx)
library(data.table)
library(dplyr)
library(tidyr)
# Set up environment
working_from = "charite"
if (working_from == "home") {
base_dir = "/home/alvaro/MyStuff/TSSc/"
} else
if (working_from == "charite") {
base_dir = "C:/MyStuff/TSSC/"
}
# Load original data
raw_1 <- as.data.frame(fread(paste(base_dir, "Data/Boone_lab/Fluorescence/raw_1.csv", sep = "")))
View(raw_1)
max(raw_1$Row)+max(raw_1$Column)
max(raw_1$Row)*max(raw_1$Column)
levels(as.factor(Plate))
levels(as.factor(raw_1$Plate))
raw_2 <- as.data.frame(fread(paste(base_dir, "Data/Boone_lab/Fluorescence/raw_2.csv", sep = "")))
levels(as.factor(raw_2$Plate))
raw_1$average_intensity_mNG[1]/raw_1$average_intensity_mScar[1]
raw_1$average_intensity_mNG/raw_1$average_intensity_mScar
library(xlsx)
library(data.table)
library(dplyr)
library(tidyr)
# Set up environment
working_from = "charite"
if (working_from == "home") {
base_dir = "/home/alvaro/MyStuff/TSSc/"
} else
if (working_from == "charite") {
base_dir = "C:/MyStuff/TSSC/"
}
# Load original data
raw_1 <- as.data.frame(fread(paste(base_dir, "Data/Boone_lab/Fluorescence/raw_1.csv", sep = "")))
raw_2 <- as.data.frame(fread(paste(base_dir, "Data/Boone_lab/Fluorescence/raw_2.csv", sep = "")))
raw_3 <- as.data.frame(fread(paste(base_dir, "Data/Boone_lab/Fluorescence/raw_3.csv", sep = "")))
View(raw_1)
knitr::opts_chunk$set(echo = TRUE)
ggplot(data = raw_1, aes(x = TimeAt37, y = `het:hom_mNG:mScar_ratio`)) +
geom_boxplot() +
theme_light()
library(dplyr)
library(data.table)
library(tidyr)
library(ggplot2)
ggplot(data = raw_1, aes(x = TimeAt37, y = `het:hom_mNG:mScar_ratio`)) +
geom_boxplot() +
theme_light()
ggplot(data = raw_1, aes(x = TimeAt37, y = `het:hom_mNG:mScar_ratio`, group = TimeAt37)) +
geom_boxplot() +
theme_light()
ggplot(data = raw_1, aes(x = TimeAt37, y = log2(`het:hom_mNG:mScar_ratio`), group = TimeAt37)) +
geom_boxplot() +
theme_light()
ggplot(data = raw_1, aes(x = as.factor(TimeAt37), y = log2(`het:hom_mNG:mScar_ratio`), group = TimeAt37)) +
geom_boxplot() +
theme_light()
ggplot(data = raw_1, aes(x = `het:hom_mNG:mScar_ratio`)) +
geom_histogram() +
theme_light()
ggplot(data = raw_1, aes(x = `het:hom_mNG:mScar_ratio`)) +
geom_histogram(binwidth = 2) +
theme_light()
ggplot(data = raw_1, aes(x = log2(`het:hom_mNG:mScar_ratio`))) +
geom_histogram(binwidth = 2) +
theme_light()
ggplot(data = raw_1, aes(x = log2(`het:hom_mNG:mScar_ratio`))) +
geom_histogram(binwidth = 1) +
theme_light()
ODs <- as.data.frame(fread("C:/MyStuff/tRNA_KOs/Data/OD_processed.csv"))
ggplot(data = ODs, aes(x = OD_processed)) +
geom_histogram(binwidth = 1) +
theme_light()
ggplot(data = ODs, aes(x = OD_processed)) +
geom_histogram(binwidth = 0.01) +
theme_light()
ggplot(data = ODs, aes(x = OD_processed)) +
geom_histogram(binwidth = 0.05) +
theme_light()
ggplot(data = ODs, aes(x = OD_processed)) +
geom_histogram(binwidth = 0.05, col = "black", fill = "grey") +
theme_light()
ggplot(data = ODs, aes(x = OD_processed)) +
geom_histogram(binwidth = 0.05, col = "black", fill = "grey") +
theme_light() +
xlab("OD") +
ylab("Count")
# Boxplot for a
ggplot(data = raw_1, aes(x = log2(`het:hom_mNG:mScar_ratio`))) +
geom_histogram(binwidth = 1) +
theme_light()
# Rep 1, all timepoints
ggplot(data = raw_1, aes(x = log2(`het:hom_mNG:mScar_ratio`))) +
geom_histogram(binwidth = 1) +
theme_light()
# Rep 1, time = 0
ggplot(data = subset(raw_1, TimeAt37 == 0), aes(x = log2(`het:hom_mNG:mScar_ratio`))) +
geom_histogram(binwidth = 1) +
theme_light()
# Rep 1, time = 12
ggplot(data = subset(raw_1, TimeAt37 == 12), aes(x = log2(`het:hom_mNG:mScar_ratio`))) +
geom_histogram(binwidth = 1) +
theme_light()
# Rep 1, all timepoints
ggplot(data = raw_1, aes(x = log2(`het:hom_mNG:mScar_ratio`))) +
geom_histogram(binwidth = 1) +
theme_light() +
coord_cartesian(xlim = c(-12, 12))
# Rep 1, time = 0
ggplot(data = subset(raw_1, TimeAt37 == 0), aes(x = log2(`het:hom_mNG:mScar_ratio`))) +
geom_histogram(binwidth = 1) +
theme_light() +
coord_cartesian(xlim = c(-12, 12))
# Rep 1, time = 12
ggplot(data = subset(raw_1, TimeAt37 == 12), aes(x = log2(`het:hom_mNG:mScar_ratio`))) +
geom_histogram(binwidth = 1) +
theme_light() +
coord_cartesian(xlim = c(-12, 12))
# Rep 1, all timepoints
ggplot(data = raw_1, aes(x = log2(`het:hom_mNG:mScar_ratio`))) +
geom_histogram(binwidth = 1) +
theme_light() +
coord_cartesian(xlim = c(-12, 12))
# Rep 1, time = 0
ggplot(data = subset(raw_1, TimeAt37 == 0), aes(x = log2(`het:hom_mNG:mScar_ratio`))) +
geom_histogram(binwidth = 1) +
theme_light() +
coord_cartesian(xlim = c(-12, 12),
ylim = c(0, 500))
# Rep 1, time = 12
ggplot(data = subset(raw_1, TimeAt37 == 12), aes(x = log2(`het:hom_mNG:mScar_ratio`))) +
geom_histogram(binwidth = 1) +
theme_light() +
coord_cartesian(xlim = c(-12, 12),
ylim = c(0, 500))
ggplot(data = raw_1, aes(x = as.factor(TimeAt37), y = log2(`het:hom_mNG:mScar_ratio`), group = TimeAt37)) +
geom_boxplot() +
theme_light()
# Heterozygous ratio, all timepoints
ggplot(data = subset(raw_1, Status == "Heterozygous"), aes(x = as.factor(TimeAt37), y = log2(`average_mNG:mScar_ratio`), group = TimeAt37)) +
geom_boxplot() +
theme_light() +
xlab("Time at 37ºC") +
ylab("log2(het:hom_mNG:mScar_ratio)") +
labs(title = "Boxplots for the final ratio at all timepoints",
subtitle = "Replicate 1")
# Heterozygous mNG, all timepoints
ggplot(data = subset(raw_1, Status == "Heterozygous"), aes(x = as.factor(TimeAt37), y = log2(average_intensity_mNG), group = TimeAt37)) +
geom_boxplot() +
theme_light() +
xlab("Time at 37ºC") +
ylab("log2(het:hom_mNG:mScar_ratio)") +
labs(title = "Boxplots for the final ratio at all timepoints",
subtitle = "Replicate 1")
# Heterozygous mNG, all timepoints
ggplot(data = subset(raw_1, Status == "Heterozygous"), aes(x = as.factor(TimeAt37), y = average_intensity_mNG, group = TimeAt37)) +
geom_boxplot() +
theme_light() +
xlab("Time at 37ºC") +
ylab("log2(het:hom_mNG:mScar_ratio)") +
labs(title = "Boxplots for the final ratio at all timepoints",
subtitle = "Replicate 1")
# Heterozygous mNG, all timepoints
ggplot(data = subset(raw_1, Status == "Heterozygous"), aes(x = as.factor(TimeAt37), y = log2(average_intensity_mNG), group = TimeAt37)) +
geom_boxplot() +
theme_light() +
xlab("Time at 37ºC") +
ylab("log2(het:hom_mNG:mScar_ratio)") +
labs(title = "Boxplots for the final ratio at all timepoints",
subtitle = "Replicate 1")
# Put together replicates
full_fluorescence <- rbind(rbind(raw_1, raw_2), raw_3)
# Final ratio, all timepoints
ggplot(data = full_fluorescence, aes(x = as.factor(TimeAt37), y = log2(`het:hom_mNG:mScar_ratio`), group = TimeAt37)) +
geom_boxplot() +
theme_light() +
xlab("Time at 37ºC") +
ylab("log2(het:hom_mNG:mScar_ratio)") +
labs(title = "Boxplots for the final ratio at all timepoints",
subtitle = "Replicate 1")
# Heterozygous ratio, all timepoints
ggplot(data = subset(full_fluorescence, Status == "Heterozygous"), aes(x = as.factor(TimeAt37), y = log2(`average_mNG:mScar_ratio`), group = TimeAt37)) +
geom_boxplot() +
theme_light() +
xlab("Time at 37ºC") +
ylab("log2(het:hom_mNG:mScar_ratio)") +
labs(title = "Boxplots for the final ratio at all timepoints",
subtitle = "Replicate 1")
# Heterozygous mNG, all timepoints
ggplot(data = subset(full_fluorescence, Status == "Heterozygous"), aes(x = as.factor(TimeAt37), y = log2(average_intensity_mNG), group = TimeAt37)) +
geom_boxplot() +
theme_light() +
xlab("Time at 37ºC") +
ylab("log2(het:hom_mNG:mScar_ratio)") +
labs(title = "Boxplots for the final ratio at all timepoints",
subtitle = "Replicate 1")
# Final ratio, all timepoints
ggplot(data = full_fluorescence, aes(x = as.factor(TimeAt37), y = log2(`het:hom_mNG:mScar_ratio`), group = TimeAt37)) +
geom_boxplot() +
theme_light() +
xlab("Time at 37ºC") +
ylab("log2(het:hom_mNG:mScar_ratio)") +
labs(title = "Boxplots for the final ratio at all timepoints",
subtitle = "All replicates")
# Heterozygous ratio, all timepoints
ggplot(data = subset(full_fluorescence, Status == "Heterozygous"), aes(x = as.factor(TimeAt37), y = log2(`average_mNG:mScar_ratio`), group = TimeAt37)) +
geom_boxplot() +
theme_light() +
xlab("Time at 37ºC") +
ylab("log2(het:hom_mNG:mScar_ratio)") +
labs(title = "Boxplots for the final ratio at all timepoints",
subtitle = "All replicates")
# Heterozygous mNG, all timepoints
ggplot(data = subset(full_fluorescence, Status == "Heterozygous"), aes(x = as.factor(TimeAt37), y = log2(average_intensity_mNG), group = TimeAt37)) +
geom_boxplot() +
theme_light() +
xlab("Time at 37ºC") +
ylab("log2(het:hom_mNG:mScar_ratio)") +
labs(title = "Boxplots for the final ratio at all timepoints",
subtitle = "All replicates")
# Final ratio, all timepoints
ggplot(data = full_fluorescence, aes(x = as.factor(TimeAt37), y = log2(`het:hom_mNG:mScar_ratio`), group = TimeAt37)) +
geom_boxplot() +
theme_light() +
xlab("Time at 37ºC") +
ylab("log2(het:hom_mNG:mScar_ratio)") +
labs(title = "Boxplots for the final ratio at all timepoints",
subtitle = "All replicates")
# Heterozygous ratio, all timepoints
ggplot(data = subset(full_fluorescence, Status == "Heterozygous"), aes(x = as.factor(TimeAt37), y = log2(`average_mNG:mScar_ratio`), group = TimeAt37)) +
geom_boxplot() +
theme_light() +
xlab("Time at 37ºC") +
ylab("log2(het:hom_mNG:mScar_ratio)") +
labs(title = "Boxplots for the heterozygous ratio at all timepoints",
subtitle = "All replicates")
# Heterozygous mNG, all timepoints
ggplot(data = subset(full_fluorescence, Status == "Heterozygous"), aes(x = as.factor(TimeAt37), y = log2(average_intensity_mNG), group = TimeAt37)) +
geom_boxplot() +
theme_light() +
xlab("Time at 37ºC") +
ylab("log2(het:hom_mNG:mScar_ratio)") +
labs(title = "Boxplots for heterozygous mNG at all timepoints",
subtitle = "All replicates")
# Final ratio, all timepoints
ggplot(data = full_fluorescence, aes(x = as.factor(TimeAt37), y = log2(`het:hom_mNG:mScar_ratio`), group = TimeAt37)) +
geom_boxplot() +
theme_light() +
xlab("Time at 37ºC") +
ylab("log2(het:hom_mNG:mScar_ratio)") +
labs(title = "Boxplots for the final ratio at all timepoints",
subtitle = "All replicates")
# Heterozygous ratio, all timepoints
ggplot(data = subset(full_fluorescence, Status == "Heterozygous"), aes(x = as.factor(TimeAt37), y = log2(`average_mNG:mScar_ratio`), group = TimeAt37)) +
geom_boxplot() +
theme_light() +
xlab("Time at 37ºC") +
ylab("average_mNG:mScar_ratio") +
labs(title = "Boxplots for the heterozygous ratio at all timepoints",
subtitle = "All replicates")
# Heterozygous mNG, all timepoints
ggplot(data = subset(full_fluorescence, Status == "Heterozygous"), aes(x = as.factor(TimeAt37), y = log2(average_intensity_mNG), group = TimeAt37)) +
geom_boxplot() +
theme_light() +
xlab("Time at 37ºC") +
ylab("Average mNG intensity") +
labs(title = "Boxplots for heterozygous mNG at all timepoints",
subtitle = "All replicates")
# Rep 1, all timepoints
ggplot(data = raw_1, aes(x = log2(`het:hom_mNG:mScar_ratio`))) +
geom_histogram(binwidth = 1) +
theme_light() +
coord_cartesian(xlim = c(-12, 12)) +
labs(title = "Histogram of final ratio - all timepoints",
subtitle = "Replicate 1")
# Rep 1, time = 0
ggplot(data = subset(raw_1, TimeAt37 == 0), aes(x = log2(`het:hom_mNG:mScar_ratio`))) +
geom_histogram(binwidth = 1) +
theme_light() +
coord_cartesian(xlim = c(-12, 12),
ylim = c(0, 500)) +
labs(title = "Histogram of final ratio - 0h",
subtitle = "Replicate 1")
# Rep 1, time = 12
ggplot(data = subset(raw_1, TimeAt37 == 12), aes(x = log2(`het:hom_mNG:mScar_ratio`))) +
geom_histogram(binwidth = 1) +
theme_light() +
coord_cartesian(xlim = c(-12, 12),
ylim = c(0, 500)) +
labs(title = "Histogram of final ratio - 12h",
subtitle = "Replicate 1")
# Final ratio, 0h vs. 12h across all replicates
x <- full_fluorescence$`het:hom_mNG:mScar_ratio`[full_fluorescence$TimeAt37 == 0]
y <- full_fluorescence$`het:hom_mNG:mScar_ratio`[full_fluorescence$TimeAt37 == 12]
test <- wilcox.test(x, y)
test
mean(x) - mean(y)
mean(x, na.rm = T) - mean(y, na.rm = T)
mean(x, na.rm = T)
mean(y, na.rm = T)
sum(x == infert)
sum(x == Inf)
sum(is.finite(x))
sum(is.na(x))
sum(is.infinite(x))
# Final ratio, 0h vs. 12h across all replicates
x <- full_fluorescence$`het:hom_mNG:mScar_ratio`[full_fluorescence$TimeAt37 == 0 & is.finite(full_fluorescence$`het:hom_mNG:mScar_ratio`)]
y <- full_fluorescence$`het:hom_mNG:mScar_ratio`[full_fluorescence$TimeAt37 == 12 & is.finite(full_fluorescence$`het:hom_mNG:mScar_ratio`)]
test <- wilcox.test(x, y)
test
mean(x, na.rm = T) - mean(y, na.rm = T)
mean(x, na.rm = T)
mean(y, na.rm = T)
hist(x)
# Rep 1, all timepoints
ggplot(data = raw_1, aes(x = `het:hom_mNG:mScar_ratio`)) +
geom_histogram(binwidth = 1) +
theme_light() +
coord_cartesian(xlim = c(-12, 12)) +
labs(title = "Histogram of final ratio - all timepoints",
subtitle = "Replicate 1")
# Rep 1, all timepoints
ggplot(data = raw_1, aes(x = `het:hom_mNG:mScar_ratio`)) +
geom_histogram(binwidth = 1) +
theme_light() +
labs(title = "Histogram of final ratio - all timepoints",
subtitle = "Replicate 1")
# Rep 1, all timepoints
ggplot(data = raw_1, aes(x = `het:hom_mNG:mScar_ratio`)) +
geom_histogram(binwidth = 1) +
theme_light() +
coord_cartesian(xlim = c(0, 50)) +
labs(title = "Histogram of final ratio - all timepoints",
subtitle = "Replicate 1")
median(x, na.rm = T) - median(y, na.rm = T)
# Rep 1, all timepoints
ggplot(data = raw_1, aes(x = `het:hom_mNG:mScar_ratio`)) +
geom_histogram(binwidth = 1) +
theme_light() +
coord_cartesian(xlim = c(0, 50)) +
labs(title = "Histogram of final ratio - all timepoints",
subtitle = "Replicate 1")
ggplot(data = raw_1, aes(x = `het:hom_mNG:mScar_ratio`)) +
geom_histogram(binwidth = 1) +
theme_light() +
labs(title = "Histogram of final ratio - all timepoints",
subtitle = "Replicate 1")
# Rep 1, all timepoints - 0 to 15
ggplot(data = raw_1, aes(x = `het:hom_mNG:mScar_ratio`)) +
geom_histogram(binwidth = 1, col = "black", fill = "grey") +
theme_light() +
coord_cartesian(xlim = c(0, 15)) +
labs(title = "Histogram of final ratio - all timepoints",
subtitle = "Replicate 1")
ggplot(data = raw_1, aes(x = `het:hom_mNG:mScar_ratio`)) +
geom_histogram(binwidth = 1) +
theme_light() +
labs(title = "Histogram of final ratio - all timepoints",
subtitle = "Replicate 1")
# Rep 1, all timepoints - 0 to 15
ggplot(data = raw_1, aes(x = `het:hom_mNG:mScar_ratio`)) +
geom_histogram(binwidth = 0.1, col = "black", fill = "grey") +
theme_light() +
coord_cartesian(xlim = c(0, 15)) +
labs(title = "Histogram of final ratio - all timepoints",
subtitle = "Replicate 1")
