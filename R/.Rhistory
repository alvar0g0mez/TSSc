ggplot(data = growth_liquid_1_10) +
geom_histogram(aes(x = Avg_AUC_22, fill = Platenum, group = Platenum), alpha = 0.4, position="identity") +
geom_histogram(aes(x = Avg_AUC_26, fill = Platenum, group = Platenum), alpha = 0.4, position="identity") +
theme_light() +
ylab("Count") +
xlab("Average AUC across biological replicates")
# Get a histogram of the difference
ggplot(data = growth_liquid_1_10, aes(x = Avg_AUC_26 - Avg_AUC_22)) +
geom_histogram(col = "black", fill = "grey") +
theme_light() +
ylab("Count") +
xlab("Diff. in average AUC (26ºC - 22ºC)")
# Get a scatter plot of Avg_AUC_22 vs. Avg_AUC_26 (same info as the histogram, but I think this one is more informative)
## Get the ratio between the 2 to color by it
growth_liquid_1_10 <- growth_liquid_1_10 %>%
mutate(Ratio_26_to_22 = as.factor(case_when(Avg_AUC_26/Avg_AUC_22 < 0.8 ~ "Below_0.8",
TRUE ~ "Above_0.8")))
## Get the plot
ggplot(data = growth_liquid_1_10, aes(x = Avg_AUC_22, y = Avg_AUC_26)) +
geom_point() +
geom_abline() +
theme_light() +
labs(col = "Ratio 26ºC/22ºC") +
labs(title = "With average AUCs across replicates") +
xlab("AUC at 22ºC") +
ylab("AUC at 26ºC")
# Get the same scatter plot but using the AUCs normalized based on the plate average - I assume this kind of corrects for batch effects? Or that is their idea?
## Get the ratio
growth_liquid_1_10 <- growth_liquid_1_10 %>%
mutate(Ratio_26_to_22_norm_by_plate = as.factor(case_when(Relative_AUC_to_plate_mean_26/Relative_AUC_to_plate_mean_22 < 0.8 ~ "Below_0.8",
TRUE ~ "Above_0.8")))
## Get the plot
ggplot(data = growth_liquid_1_10, aes(x = Relative_AUC_to_plate_mean_22, y = Relative_AUC_to_plate_mean_26)) +
geom_point() +
geom_abline() +
labs(col = "Ratio 26ºC/22ºC") +
theme_light() +
labs(title = "With (average) AUCs normalized to plate mean") +
xlab("AUC at 22ºC") +
ylab("AUC at 26ºC")
# Color by Platenum (whatever that is) just to be sure there isn't a huge effect of that - there is :(
ggplot(data = growth_liquid_1_10, aes(x = Avg_AUC_22, y = Avg_AUC_26, col = as.factor(Platenum))) +
geom_point() +
geom_abline() +
labs(col = "Plate") +
labs(title = "With average AUCs across replicates") +
theme_light() +
xlab("AUC at 22ºC") +
ylab("AUC at 26ºC")
## Get the plot
ggplot(data = growth_liquid_1_10, aes(x = Relative_AUC_to_plate_mean_22, y = Relative_AUC_to_plate_mean_26, col = as.factor(Platenum))) +
geom_point() +
geom_abline() +
labs(col = "Ratio 26ºC/22ºC") +
theme_light() +
labs(title = "With (average) AUCs normalized to plate mean") +
xlab("AUC at 22ºC") +
ylab("AUC at 26ºC")
# Overlayed histograms for the 2 temperatures
ggplot(data = growth_liquid_1_100) +
geom_histogram(aes(x = Avg_AUC_22, fill = "22ºC"), alpha = 0.4, position="identity") +
geom_histogram(aes(x = Avg_AUC_26, fill = "26ºC"), alpha = 0.4, position="identity") +
theme_light() +
ylab("Count") +
xlab("Average AUC across biological replicates") +
scale_fill_manual(name = "Temperature",
breaks = c("22ºC", "26ºC"),
values = c("22ºC"="lightblue", "26ºC"="orange"))
# Get a histogram of the difference
ggplot(data = growth_liquid_1_100, aes(x = Avg_AUC_26 - Avg_AUC_22)) +
geom_histogram(col = "black", fill = "grey") +
theme_light() +
ylab("Count") +
xlab("Diff. in average AUC (26ºC - 22ºC)")
# Get a scatter plot of Avg_AUC_22 vs. Avg_AUC_26 (same info as the histogram, but I think this one is more informative)
## Get the ratio between the 2 to color by it
growth_liquid_1_100 <- growth_liquid_1_100 %>%
mutate(Ratio_26_to_22 = as.factor(case_when(Avg_AUC_26/Avg_AUC_22 < 0.8 ~ "Below_0.8",
TRUE ~ "Above_0.8")))
## Get the plot
ggplot(data = growth_liquid_1_100, aes(x = Avg_AUC_22, y = Avg_AUC_26)) +
geom_point() +
geom_abline() +
theme_light() +
labs(col = "Ratio 26ºC/22ºC") +
labs(title = "With average AUCs across replicates") +
xlab("AUC at 22ºC") +
ylab("AUC at 26ºC")
# Get the same scatter plot but using the AUCs normalized based on the plate average - I assume this kind of corrects for batch effects? Or that is their idea?
## Get the ratio
growth_liquid_1_100 <- growth_liquid_1_100 %>%
mutate(Ratio_26_to_22_norm_by_plate = as.factor(case_when(Relative_AUC_to_plate_mean_26/Relative_AUC_to_plate_mean_22 < 0.8 ~ "Below_0.8",
TRUE ~ "Above_0.8")))
## Get the plot
## Get the plot
ggplot(data = growth_liquid_1_100, aes(x = Relative_AUC_to_plate_mean_22, y = Relative_AUC_to_plate_mean_26)) +
geom_point() +
geom_abline() +
labs(col = "Ratio 26ºC/22ºC") +
theme_light() +
labs(title = "With (average) AUCs normalized to plate mean") +
xlab("AUC at 22ºC") +
ylab("AUC at 26ºC")
knitr::opts_chunk$set(echo = TRUE)
library(xlsx)
library(data.table)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggrepel)
library(stringr)
library(DescTools)
raw_agar <- as.data.frame(fread("C:/MyStuff/TSSC/Data/Growth/Original data/Raw/agar_raw_data.tsv"))
# Remove rows that are tagged as "exclude"
raw_agar <- raw_agar[!(grepl("exclude", raw_agar$SB.notes, ignore.case = T)),]
# Remove rows that don't have neither a "Lab.ID" nor a "Notes" (the controls don't have the first but do have the second)
raw_agar <- raw_agar %>%
filter(!(Lab.ID == "" & Notes == "")) %>%
select(-`Sys Name`)
# Create a unique ID column
raw_agar <- raw_agar %>%
mutate(Unique.ID = case_when(Lab.ID != "" ~ paste(Lab.ID, "Positions", plate384, row384, col384, plate1536, row1536, col1536, sep = "_"),
Lab.ID == "" ~ paste(Notes, "Positions", plate384, row384, col384, plate1536, row1536, col1536, sep = "_")))
wells <- unique(raw_agar$Unique.ID)
samples <- c()
replicate <- c()
temperatures <- c()
AUCs <- c()
for (i in 1:length(wells)) {
# Define which sample we are evaluating in this iteration
well <- wells[i]
# Divide the dataset for this sample into 4, based on temperature and replicate
temp_22_rep_1 <- raw_agar %>% filter(Unique.ID == well & temperature == 22 & replicate == 1)
temp_26_rep_1 <- raw_agar %>% filter(Unique.ID == well & temperature == 26 & replicate == 1)
temp_22_rep_2 <- raw_agar %>% filter(Unique.ID == well & temperature == 22 & replicate == 2)
temp_26_rep_2 <- raw_agar %>% filter(Unique.ID == well & temperature == 26 & replicate == 2)
# Calculate the AUC for each sub-dataset and save them to a vector
AUCs <- c(AUCs, AUC(x = as.numeric(as.POSIXct(temp_22_rep_1$ts)), y = temp_22_rep_1$size, na.rm = T),
AUC(x = as.numeric(as.POSIXct(temp_26_rep_1$ts)), y = temp_26_rep_1$size, na.rm = T),
AUC(x = as.numeric(as.POSIXct(temp_22_rep_2$ts)), y = temp_22_rep_2$size, na.rm = T),
AUC(x = as.numeric(as.POSIXct(temp_26_rep_2$ts)), y = temp_26_rep_2$size, na.rm = T))
# Save all other data (sample name, replicate, temperature) to other vectors so we can put them all together into a final dataset
samples <- c(samples, well, well, well, well)
temperatures <- c(temperatures, 22, 26, 22, 26)
replicate <- c(replicate, 1, 1, 2, 2)
}
# Build a dataset from the obtained data, and make it look like theirs did - colnames I want to end up with:
# Plate384, Row384, Col384, Sys.Name, Std.Name, TS.allele, Lab.ID, Notes, SB.notes, Rep_1_AUC_22, Rep_2_AUC_22, Avg_AUC_22, Relative_AUC_to_control_mean_22, Relative_AUC_to_plate_mean_22, Rep_1_AUC_26, Rep_2_AUC_26, Avg_AUC_26, Relative_AUC_to_control_mean_26, Relative_AUC_to_plate_mean_26
AUCs_temp <- data.frame(Unique.ID = samples, temperature = temperatures, AUCs, replicate)
raw_agar_temp <- raw_agar %>%
select(-c(size, circularity, ts)) %>%
distinct(Unique.ID, temperature, .keep_all = T)
AUCs_df <- left_join(AUCs_temp, raw_agar_temp, by = c("Unique.ID", "temperature", "replicate"))
## Separate by replicates, rename columns and then join again as different columns
AUCs_rep_1_22 <- AUCs_df %>%
filter(replicate == 1 & temperature == 22) %>%
rename(Rep_1_AUC_22 = AUCs)
AUCs_rep_2_22 <- AUCs_df %>%
filter(replicate == 2 & temperature == 22) %>%
rename(Rep_2_AUC_22 = AUCs)
AUCs_rep_1_26 <- AUCs_df %>%
filter(replicate == 1 & temperature == 26) %>%
rename(Rep_1_AUC_26 = AUCs)
AUCs_rep_2_26 <- AUCs_df %>%
filter(replicate == 2 & temperature == 26) %>%
rename(Rep_2_AUC_26 = AUCs)
View(AUCs_rep_1_22)
View(AUCs_rep_1_26)
View(AUCs_rep_2_22)
View(AUCs_rep_2_26)
View(AUCs_temp)
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
rename(Rep_1_AUC_22 = AUCs) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate"))
AUCs_rep_2_22 <- AUCs_temp %>%
filter(replicate == 2 & temperature == 22) %>%
rename(Rep_2_AUC_22 = AUCs) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate"))
AUCs_rep_1_26 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 26) %>%
rename(Rep_1_AUC_26 = AUCs) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate"))
AUCs_rep_2_26 <- AUCs_temp %>%
filter(replicate == 2 & temperature == 26) %>%
rename(Rep_2_AUC_26 = AUCs) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate"))
View(AUCs_rep_1_22)
View(AUCs_rep_1_26)
View(AUCs_rep_2_22)
View(raw_agar)
View(raw_agar)
View(AUCs_rep_2_26)
raw_agar$Unique.ID[1]
AUCs_rep_2_22$Unique.ID[1]
raw_agar$Unique.ID[1] == AUCs_rep_2_22$Unique.ID[1]
View(raw_agar_temp)
raw_agar_temp <- raw_agar %>%
select(-c(size, circularity, ts)) %>%
distinct(Unique.ID, temperature, replicate, .keep_all = T)
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
rename(Rep_1_AUC_22 = AUCs) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate"))
AUCs_rep_2_22 <- AUCs_temp %>%
filter(replicate == 2 & temperature == 22) %>%
rename(Rep_2_AUC_22 = AUCs) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate"))
AUCs_rep_1_26 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 26) %>%
rename(Rep_1_AUC_26 = AUCs) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate"))
AUCs_rep_2_26 <- AUCs_temp %>%
filter(replicate == 2 & temperature == 26) %>%
rename(Rep_2_AUC_26 = AUCs) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate"))
View(AUCs_rep_1_22)
View(AUCs_rep_1_26)
View(AUCs_rep_2_22)
View(AUCs_rep_2_26)
View(raw_agar)
View(AUCs_rep_1_22)
## Separate by replicates, rename columns and then join again as different columns
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
rename(Rep_1_AUC_22 = AUCs) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_"),
Plate1536.ID = paste(plate1536, row1536, col1536, sep ="_"))
AUCs_rep_2_22 <- AUCs_temp %>%
filter(replicate == 2 & temperature == 22) %>%
rename(Rep_2_AUC_22 = AUCs) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_"),
Plate1536.ID = paste(plate1536, row1536, col1536, sep ="_"))
AUCs_rep_1_26 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 26) %>%
rename(Rep_1_AUC_26 = AUCs) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_"),
Plate1536.ID = paste(plate1536, row1536, col1536, sep ="_"))
AUCs_rep_2_26 <- AUCs_temp %>%
filter(replicate == 2 & temperature == 26) %>%
rename(Rep_2_AUC_26 = AUCs) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_"),
Plate1536.ID = paste(plate1536, row1536, col1536, sep ="_"))
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
rename(Rep_1_AUC_22 = AUCs) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_"),
Plate1536.ID = paste(plate1536, row1536, col1536, sep ="_")) #%>%
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
rename(Rep_1_AUC_22 = AUCs)
raw_agar_temp_2 <- raw_agar %>%
select(Unique.ID, temperature, replicate, plate384, row384, col384)
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
rename(Rep_1_AUC_22 = AUCs) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_"),
Plate1536.ID = paste(plate1536, row1536, col1536, sep ="_"))
## Separate by replicates, rename columns and then join again as different columns
## In this process I create an ID for the 384-well plate so that I can collapse by it
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
rename(Rep_1_AUC_22 = AUCs) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) #%>%
View(AUCs_rep_1_26)
## Separate by replicates, rename columns and then join again as different columns
## In this process I create an ID for the 384-well plate so that I can collapse by it
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
rename(Rep_1_AUC_22 = AUCs) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate"))
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
rename(Rep_1_AUC_22 = AUCs)
raw_agar_temp_2 <- raw_agar %>%
select(Unique.ID, temperature, replicate, plate384, row384, col384) %>%
distinct(Unique.ID, temperature, replicate, .keep_all = T)
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
rename(Rep_1_AUC_22 = AUCs) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_"))
View(AUCs_rep_1_22)
## Separate by replicates, rename columns and then join again as different columns
## In this process I create an ID for the 384-well plate so that I can collapse by it
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
rename(Rep_1_AUC_22 = AUCs) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
group_by(Plate384.ID) %>%
aggregate(by = Plate384.ID, FUN = mean())
check <- aggregate(AUCs_rep_1_22, by = "Plate.384", FUN = mean)
check <- aggregate(AUCs_rep_1_22, by = list("Plate.384"), FUN = mean)
check <- aggregate(AUCs_rep_1_22, by = list(AUCs_rep_1_22$Plate.384), FUN = mean)
check <- aggregate(AUCs_rep_1_22, by = list(AUCs_rep_1_22$Plate384.ID), FUN = mean)
View(check)
## Separate by replicates, rename columns and then join again as different columns
## In this process I create an ID for the 384-well plate so that I can collapse by it
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
group_by(Plate384.ID) %>%
mutate(Rep_1_AUC_22 = mean(AUCs))
View(AUCs_rep_1_22)
## Separate by replicates, rename columns and then join again as different columns
## In this process I create an ID for the 384-well plate so that I can collapse by it
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
group_by(Plate384.ID) %>%
mutate(Rep_1_AUC_22 = mean(AUCs)) %>%
select(-c(AUCs, plate384, row384, col384)) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate"))
View(AUCs_rep_1_22)
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
group_by(Plate384.ID) %>%
mutate(Rep_1_AUC_22 = mean(AUCs)) %>%
select(-c(AUCs, plate384, row384, col384))
5416/2
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
group_by(Plate384.ID) %>%
mutate(Rep_1_AUC_22 = mean(AUCs)) %>%
select(-c(AUCs, plate384, row384, col384)) %>%
distinct(Plate384.ID) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate"))
## Separate by replicates, rename columns and then join again as different columns
## In this process I create an ID for the 384-well plate so that I can collapse by it
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
group_by(Plate384.ID) %>%
mutate(Rep_1_AUC_22 = mean(AUCs)) %>%
select(-c(AUCs, plate384, row384, col384)) %>%
distinct(Plate384.ID, .keep_all = T) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate"))
5416/2
5416/4
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
group_by(Plate384.ID) %>%
mutate(Rep_1_AUC_22 = mean(AUCs)) %>%
select(-c(AUCs, plate384, row384, col384)) %>%
distinct(Plate384.ID, .keep_all = T) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate"))
AUCs_rep_2_22 <- AUCs_temp %>%
filter(replicate == 2 & temperature == 22) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
group_by(Plate384.ID) %>%
mutate(Rep_2_AUC_22 = mean(AUCs)) %>%
select(-c(AUCs, plate384, row384, col384)) %>%
distinct(Plate384.ID, .keep_all = T) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate"))
AUCs_rep_1_26 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 26) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
group_by(Plate384.ID) %>%
mutate(Rep_1_AUC_26 = mean(AUCs)) %>%
select(-c(AUCs, plate384, row384, col384)) %>%
distinct(Plate384.ID, .keep_all = T) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate"))
AUCs_rep_2_26 <- AUCs_temp %>%
filter(replicate == 2 & temperature == 26) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
group_by(Plate384.ID) %>%
mutate(Rep_2_AUC_26 = mean(AUCs)) %>%
select(-c(AUCs, plate384, row384, col384)) %>%
distinct(Plate384.ID, .keep_all = T) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate"))
View(AUCs_rep_1_22)
View(AUCs_rep_1_26)
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
group_by(Plate384.ID) %>%
mutate(Rep_1_AUC_22 = mean(AUCs)) %>%
select(-c(AUCs, plate384, row384, col384)) %>%
distinct(Plate384.ID, .keep_all = T) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate"))
AUCs_rep_2_22 <- AUCs_temp %>%
filter(replicate == 2 & temperature == 22) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
group_by(Plate384.ID) %>%
mutate(Rep_2_AUC_22 = mean(AUCs)) %>%
select(-c(AUCs, plate384, row384, col384)) %>%
distinct(Plate384.ID, .keep_all = T)
AUCs_rep_1_26 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 26) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
group_by(Plate384.ID) %>%
mutate(Rep_1_AUC_26 = mean(AUCs)) %>%
select(-c(AUCs, plate384, row384, col384)) %>%
distinct(Plate384.ID, .keep_all = T)
AUCs_rep_2_26 <- AUCs_temp %>%
filter(replicate == 2 & temperature == 26) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
group_by(Plate384.ID) %>%
mutate(Rep_2_AUC_26 = mean(AUCs)) %>%
select(-c(AUCs, plate384, row384, col384)) %>%
distinct(Plate384.ID, .keep_all = T)
## Join these separate datasets
final_AUCs <- left_join(AUCs_rep_1_22, AUCs_rep_1_26, by = c("Unique.ID", "temperature", "replicate", "Plate384.ID"))
final_AUCs <- left_join(final_AUCs, AUCs_rep_2_22, by = c("Unique.ID", "temperature", "replicate", "Plate384.ID"))
final_AUCs <- left_join(final_AUCs, AUCs_rep_2_26, by = c("Unique.ID", "temperature", "replicate", "Plate384.ID"))
View(final_AUCs)
## Join these separate datasets
final_AUCs <- left_join(AUCs_rep_1_26, AUCs_rep_2_22, by = c("Unique.ID", "temperature", "replicate", "Plate384.ID"))
View(AUCs_rep_2_22)
## Join these separate datasets
final_AUCs <- left_join(AUCs_rep_1_26, AUCs_rep_2_22, by = c("Plate384.ID"))
AUCs_rep_2_22 <- AUCs_temp %>%
filter(replicate == 2 & temperature == 22) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
group_by(Plate384.ID) %>%
mutate(Rep_2_AUC_22 = mean(AUCs)) %>%
select(-c(AUCs, plate384, row384, col384)) %>%
distinct(Plate384.ID, .keep_all = T) %>%
select(Plate384.ID, Rep_2_AUC_22)
AUCs_rep_1_26 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 26) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
group_by(Plate384.ID) %>%
mutate(Rep_1_AUC_26 = mean(AUCs)) %>%
select(-c(AUCs, plate384, row384, col384)) %>%
distinct(Plate384.ID, .keep_all = T) %>%
select(Plate384.ID, Rep_1_AUC_26)
AUCs_rep_2_26 <- AUCs_temp %>%
filter(replicate == 2 & temperature == 26) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
group_by(Plate384.ID) %>%
mutate(Rep_2_AUC_26 = mean(AUCs)) %>%
select(-c(AUCs, plate384, row384, col384)) %>%
distinct(Plate384.ID, .keep_all = T) %>%
select(Plate384.ID, Rep_2_AUC_26)
## Join these separate datasets
final_AUCs <- left_join(AUCs_rep_1_26, AUCs_rep_2_22, by = c("Plate384.ID"))
final_AUCs <- left_join(final_AUCs, AUCs_rep_2_26, by = c("Plate384.ID"))
final_AUCs <- left_join(AUCs_rep_1_22, final_AUCs, by = c("Plate384.ID"))
## Separate by replicates, rename columns
## In this process I create an ID for the 384-well plate so that I can collapse by it
AUCs_rep_1_22 <- AUCs_temp %>%
filter(replicate == 1 & temperature == 22) %>%
left_join(raw_agar_temp_2, by = c("Unique.ID", "temperature", "replicate")) %>%
mutate(Plate384.ID = paste(plate384, row384, col384, sep = "_")) %>%
group_by(Plate384.ID) %>%
mutate(Rep_1_AUC_22 = mean(AUCs)) %>%
select(-c(AUCs, plate384, row384, col384)) %>%
distinct(Plate384.ID, .keep_all = T) %>%
left_join(raw_agar_temp, by = c("Unique.ID", "temperature", "replicate")) %>%
relocate(Rep_1_AUC_22, .after = last_col())
final_AUCs <- left_join(AUCs_rep_1_26, AUCs_rep_2_22, by = c("Plate384.ID"))
final_AUCs <- left_join(final_AUCs, AUCs_rep_2_26, by = c("Plate384.ID"))
final_AUCs <- left_join(AUCs_rep_1_22, final_AUCs, by = c("Plate384.ID"))
## Get some final columns to have the same information as in the original one
final_AUCs <- final_AUCs %>%
mutate(Avg_AUC_22 = mean(Rep_1_AUC_22, Rep_2_AUC_22),
Avg_AUC_26 = mean(Rep_1_AUC_26, Rep_2_AUC_26))
ggplot(data = final_AUCs, aes(x = Avg_AUC_22, y = Avg_AUC_26, col = plate384)) +
geom_point()
ggplot(data = final_AUCs, aes(x = Avg_AUC_22, y = Avg_AUC_26, col = as.factor(plate384))) +
geom_point()
ggplot(data = final_AUCs, aes(x = Avg_AUC_22, y = Avg_AUC_26, col = as.factor(plate384))) +
geom_point() +
theme_light() +
labs(col = "384-well plate")
ggplot(data = final_AUCs, aes(x = Avg_AUC_22, y = Avg_AUC_26, col = as.factor(plate384))) +
geom_point() +
geom_abline() +
theme_light() +
labs(col = "384-well plate")
levels(as.factor(final_AUCs$plate1536))
ggplot(data = final_AUCs, aes(x = Avg_AUC_22, y = Avg_AUC_26, col = as.factor(plate1536))) +
geom_point() +
geom_abline() +
theme_light() +
labs(col = "1536-well plate")
levels(as.factor(raw_agar$plate1536))
levels(as.factor(final_AUCs$replicate))
## Get some final columns to have the same information as in the original one
final_AUCs <- final_AUCs %>%
select(-replicate) %>%
mutate(Avg_AUC_22 = mean(Rep_1_AUC_22, Rep_2_AUC_22),
Avg_AUC_26 = mean(Rep_1_AUC_26, Rep_2_AUC_26))
